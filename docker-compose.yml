# docker run -d --name postgres -v prefectdb:/var/lib/postgresql/data -p 5432:5432 -e POSTGRES_USER=postgres -e POSTGRES_PASSWORD=postgres -e POSTGRES_DB=prefect postgres:latest
 
services:
  postgres:
    image: postgres:latest
    container_name: postgres_multi_db
    environment:
      POSTGRES_USER: ${POSTGRES_USER:-postgres}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-postgres}
      POSTGRES_MULTIPLE_DATABASES: prefect,quant
    volumes:
      - ./init-multiple-databases.sh:/docker-entrypoint-initdb.d/init-multiple-databases.sh
      - quantdb:/var/lib/postgresql/data
    ports:
      - 5432:5432
    restart: unless-stopped
    command: >
      bash -c "
        chmod +x /docker-entrypoint-initdb.d/init-multiple-databases.sh &&
        exec docker-entrypoint.sh postgres
      "
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER:-postgres}"]
      interval: 5s
      timeout: 5s
      retries: 5

  redis:
    image: redis:7
    volumes:
      - redis_data:/data
    healthcheck:
      test: ["CMD-SHELL", "redis-cli ping"]
      interval: 5s
      timeout: 5s
      retries: 5

  prefect-server:
    image: prefecthq/prefect:3-latest
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    environment:
      PREFECT_API_DATABASE_CONNECTION_URL: postgresql+asyncpg://${POSTGRES_USER:-postgres}:${POSTGRES_PASSWORD:-postgres}@postgres:5432/prefect
      PREFECT_MESSAGING_BROKER: prefect_redis.messaging
      PREFECT_MESSAGING_CACHE: prefect_redis.messaging
      PREFECT_REDIS_MESSAGING_HOST: redis
      PREFECT_REDIS_MESSAGING_PORT: 6379
      PREFECT_REDIS_MESSAGING_DB: 0
    command: prefect server start --host 0.0.0.0
    ports:
      - "4200:4200"

  prefect-worker:
      build: .
      depends_on:
        prefect-server:
          condition: service_started
      environment:
        PREFECT_API_URL: http://prefect-server:4200/api
      command: bash -c "source .venv/bin/activate && export $(grep -v '^#' .env | xargs) && prefect deploy --all && prefect worker start --pool demo"
      restart: on-failure:3


volumes:
  quantdb: 
  redis_data:
 